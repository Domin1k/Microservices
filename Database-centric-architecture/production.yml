version: "3.8"

services:
 
    db:
        container_name: sqlserver
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
            - "1433:1433"
        environment: 
            - ACCEPT_EULA=Y
            - SA_PASSOWRD=yourStrong12!Password
        volumes: 
            - sqldata:/var/opt/mssql 
        networks: 
            - petfoodshop-network

    messaging:
        container_name: rabbitmq
        image: rabbitmq:3-management
        ports: 
            - "15672:15672"
            - "5672:5672"
        hostname: "rabbitmq"
        environment:
            - RABBITMQ_ERLANG_COOKIE=Rand0mR4bbitMqCo0k1e
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq
        networks: 
            - petfoodshop-network

    identity:
        container_name: identity
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Identity/Dockerfile
        ports: 
            - "5003:80"
        env_file: server/PetFoodShop/Common.env
        environment:
            - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=PetShopDB-Identity;User Id=sa; Password=yourStrong12!Password;MultipleActiveResultSets=true
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network
        depends_on:
            - db

    admin:
        container_name: admin
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Admin/Dockerfile
        ports: 
            - "5009:80"
        env_file: server/PetFoodShop/Common.env
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network

    cart:
        container_name: cart
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Cart/Dockerfile
        ports: 
            - "5005:80"
        env_file: server/PetFoodShop/Common.env
        environment:
            - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=PetShopDB-Cart;User Id=sa; Password=yourStrong12!Password;MultipleActiveResultSets=true
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network
        depends_on:
            - db

    foods:
        container_name: foods
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Foods/Dockerfile
        ports: 
            - "5001:80"
        env_file: server/PetFoodShop/Common.env
        environment:
            - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=PetShopDB-Foods;User Id=sa; Password=yourStrong12!Password;MultipleActiveResultSets=true
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network
        depends_on:
            - db

    foodsgateway:
        container_name: foodsgateway 
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Foods.Gateway/Dockerfile
        ports: 
            - "5011:80"
        env_file: server/PetFoodShop/Common.env
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network
        depends_on:
            - foods

    notifications:
        container_name: notifications
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Notifications/Dockerfile
        ports: 
            - "5013:80"
        env_file: server/PetFoodShop/Common.env
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network

    statistics:
        container_name: statistics
        build:
            context: ./server
            dockerfile: ./PetFoodShop.Statistics/Dockerfile
        ports: 
            - "5007:80"
        env_file: server/PetFoodShop/Common.env
        environment:
            - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=PetShopDB-Statistics;User Id=sa; Password=yourStrong12!Password;MultipleActiveResultSets=true
        restart: on-failure
        volumes:
            - ./.aspnet/identity/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
        networks: 
            - petfoodshop-network
        depends_on:
            - db       

networks: 
    petfoodshop-network:

volumes: 
    sqldata: